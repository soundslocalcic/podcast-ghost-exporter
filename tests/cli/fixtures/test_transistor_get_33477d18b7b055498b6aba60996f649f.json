{
    "headers": {
        "Date": "Fri, 20 Jun 2025 14:31:45 GMT",
        "Content-Type": "text/xml; charset=utf-8",
        "Content-Length": "11059",
        "Connection": "keep-alive",
        "Cf-Ray": "952bf8bf6871888f-LHR",
        "Cache-Control": "public, max-age=10, stale-while-revalidate=0",
        "Last-Modified": "Fri, 20 Jun 2025 10:36:46 GMT",
        "Content-Encoding": "gzip",
        "X-Content-Type-Options": "nosniff",
        "Vary": "Accept-Encoding",
        "Etag": "W/\"a1a9f8d8ac0f3f63d4f94f0c04c0e855\"",
        "Tf-Cache-Tag": "tf-show-58460",
        "Apigw-Requestid": "MdYT8g3YoAMESgw=",
        "Cf-Cache-Status": "HIT",
        "Age": "13906",
        "Accept-Ranges": "bytes",
        "Access-Control-Allow-Methods": "GET",
        "Access-Control-Allow-Origin": "*",
        "Server": "cloudflare",
        "alt-svc": "h3=\":443\"; ma=86400"
    },
    "status_code": 200,
    "body": "<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet href="stylesheet.xsl" type="text/xsl"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd" xmlns:podcast="https://podcastindex.org/namespace/1.0">
  <channel>
    <atom:link rel="self" type="application/atom+xml" href="https://feeds.transistor.fm/undo" title="MP3 Audio"/>
    <atom:link rel="hub" href="https://pubsubhubbub.appspot.com/"/>
    <podcast:podping usesPodping="true"/>
    <title>Undo – How history's outliers got stuff done</title>
    <generator>Transistor (https://transistor.fm)</generator>
    <itunes:new-feed-url>https://feeds.transistor.fm/undo</itunes:new-feed-url>
    <description>An investigation into how history’s oddballs, outliers, and overachievers built systems to help them do their best work.

Each episode unearths a so-called productivity hack from history to help you separate the brilliant from the bullshit, so you can build a methodology that works for you.

Productivity isn’t about getting more done to feed a money-seeking monster with an ever-growing appetite. It’s about clearing the clutter so you can focus on what you do best.

Because if Edison can invent the lightbulb without Inbox Zero, you can probably survive without 10x-ing your toothbrush routine.</description>
    <copyright>© Hello Steadman Ltd</copyright>
    <podcast:guid>cd3c45c4-310c-5722-8bb8-3d58c2c951e8</podcast:guid>
    <podcast:locked owner="hello@undo.fm">no</podcast:locked>
    <itunes:applepodcastsverify>bbe91c00-f467-11ef-8951-13c277322e19</itunes:applepodcastsverify>
    <podcast:trailer pubdate="Fri, 08 Nov 2024 00:00:00 +0000" url="https://op3.dev/e/pdcn.co/e/media.transistor.fm/31a472ee/6869d13f.mp3" length="1440963" type="audio/mpeg">Introducing Undo</podcast:trailer>
    <language>en</language>
    <pubDate>Fri, 20 Jun 2025 11:35:51 +0100</pubDate>
    <lastBuildDate>Fri, 20 Jun 2025 11:36:45 +0100</lastBuildDate>
    <link>https://www.undo.fm/</link>
    <image>
      <url>https://img.transistor.fm/VIUjzQSS4DrUdiZskcTe-HfobZNwECLVzarKwMuzFsI/rs:fill:3000:3000:1/q:60/aHR0cHM6Ly9pbWct/dXBsb2FkLXByb2R1/Y3Rpb24udHJhbnNp/c3Rvci5mbS8xZDZj/ZDQ2MzFiMWE2MmQ1/YWI3MGE1ZDI5NzBi/NzNmZC5qcGc.jpg</url>
      <title>Undo – How history's outliers got stuff done</title>
      <link>https://www.undo.fm/</link>
    </image>
    <itunes:category text="Education">
      <itunes:category text="Self-Improvement"/>
    </itunes:category>
    <itunes:category text="Education">
      <itunes:category text="How To"/>
    </itunes:category>
    <itunes:type>episodic</itunes:type>
    <itunes:author>Mark Steadman</itunes:author>
    <itunes:image href="https://img.transistor.fm/VIUjzQSS4DrUdiZskcTe-HfobZNwECLVzarKwMuzFsI/rs:fill:3000:3000:1/q:60/aHR0cHM6Ly9pbWct/dXBsb2FkLXByb2R1/Y3Rpb24udHJhbnNp/c3Rvci5mbS8xZDZj/ZDQ2MzFiMWE2MmQ1/YWI3MGE1ZDI5NzBi/NzNmZC5qcGc.jpg"/>
    <itunes:summary>An investigation into how history’s oddballs, outliers, and overachievers built systems to help them do their best work.

Each episode unearths a so-called productivity hack from history to help you separate the brilliant from the bullshit, so you can build a methodology that works for you.

Productivity isn’t about getting more done to feed a money-seeking monster with an ever-growing appetite. It’s about clearing the clutter so you can focus on what you do best.

Because if Edison can invent the lightbulb without Inbox Zero, you can probably survive without 10x-ing your toothbrush routine.</itunes:summary>
    <itunes:subtitle>An investigation into how history’s oddballs, outliers, and overachievers built systems to help them do their best work.</itunes:subtitle>
    <itunes:keywords></itunes:keywords>
    <itunes:owner>
      <itunes:name>Mark Steadman</itunes:name>
      <itunes:email>hello@undo.fm</itunes:email>
    </itunes:owner>
    <itunes:complete>No</itunes:complete>
    <itunes:explicit>No</itunes:explicit>
    <item>
      <title>Congrats, you’re burned out! Here’s what to do next</title>
      <itunes:episode>23</itunes:episode>
      <podcast:episode>23</podcast:episode>
      <itunes:title>Congrats, you’re burned out! Here’s what to do next</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <guid isPermaLink="false">c37d7fe3-4697-451d-a03e-8551a80dff3d</guid>
      <link>https://undo.fm/burnout/</link>
      <description>
        <![CDATA[<p>Burnout is something that affects neurotypicals and neurospicies alike, so today we’re going to find out what it looks like so you can spot it whether it’s in the distance or right up in your grill, and more importantly we’ll look at what we can do about it.</p><p>Check out our guest's podcast, <a href="https://episodes.fm/1472165023">You Are Not a Frog</a>.</p><p><a href="https://www.shapestoolkit.com/burnout-toolkit">Am I Stressed, Overwhelmed... or Burning Out?</a><strong><br></strong>Get your free guide to help you tell the difference</p>
<br><p><strong>Support the show from $3 and get</strong></p><ul><li>Episodes early and ad-free</li><li>Join our listener community</li><li>Join Mark for monthly Q&amp;As</li></ul><p><a href="https://www.patreon.com/c/UndoPodcast"><strong>Support Undo via Patreon</strong></a></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p>Burnout is something that affects neurotypicals and neurospicies alike, so today we’re going to find out what it looks like so you can spot it whether it’s in the distance or right up in your grill, and more importantly we’ll look at what we can do about it.</p><p>Check out our guest's podcast, <a href="https://episodes.fm/1472165023">You Are Not a Frog</a>.</p><p><a href="https://www.shapestoolkit.com/burnout-toolkit">Am I Stressed, Overwhelmed... or Burning Out?</a><strong><br></strong>Get your free guide to help you tell the difference</p>
<br><p><strong>Support the show from $3 and get</strong></p><ul><li>Episodes early and ad-free</li><li>Join our listener community</li><li>Join Mark for monthly Q&amp;As</li></ul><p><a href="https://www.patreon.com/c/UndoPodcast"><strong>Support Undo via Patreon</strong></a></p>]]>
      </content:encoded>
      <pubDate>Mon, 16 Jun 2025 00:00:00 +0100</pubDate>
      <author>Dr Rachel Morris, Mark Steadman</author>
      <enclosure url="https://op3.dev/e/pdcn.co/e/media.transistor.fm/12e87fa3/6eeb7e3c.mp3" length="22550002" type="audio/mpeg"/>
      <itunes:author>Dr Rachel Morris, Mark Steadman</itunes:author>
      <itunes:image href="https://img.transistor.fm/qzt8EMuiqSVl8ZHTjsOmjDCfwjr_24C3KV8eTUn_l1U/rs:fill:3000:3000:1/q:60/aHR0cHM6Ly9pbWct/dXBsb2FkLXByb2R1/Y3Rpb24udHJhbnNp/c3Rvci5mbS8yYjgw/MzAwYzk5Y2ZkMjg2/ODNlOWMwOTgxOTE0/MmUxNS5qcGc.jpg"/>
      <itunes:duration>1407</itunes:duration>
      <itunes:summary>
        <![CDATA[<p>Burnout is something that affects neurotypicals and neurospicies alike, so today we’re going to find out what it looks like so you can spot it whether it’s in the distance or right up in your grill, and more importantly we’ll look at what we can do about it.</p><p>Check out our guest's podcast, <a href="https://episodes.fm/1472165023">You Are Not a Frog</a>.</p><p><a href="https://www.shapestoolkit.com/burnout-toolkit">Am I Stressed, Overwhelmed... or Burning Out?</a><strong><br></strong>Get your free guide to help you tell the difference</p>
<br><p><strong>Support the show from $3 and get</strong></p><ul><li>Episodes early and ad-free</li><li>Join our listener community</li><li>Join Mark for monthly Q&amp;As</li></ul><p><a href="https://www.patreon.com/c/UndoPodcast"><strong>Support Undo via Patreon</strong></a></p>]]>
      </itunes:summary>
      <itunes:keywords></itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
    </item>
    <item>
      <title>You aren’t lazy; you’re fighting a broken system – Ignacio Martín-Baró</title>
      <itunes:episode>22</itunes:episode>
      <podcast:episode>22</podcast:episode>
      <itunes:title>You aren’t lazy; you’re fighting a broken system – Ignacio Martín-Baró</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <guid isPermaLink="false">eceeaa8c-3901-4531-b6d3-aeebf3440856</guid>
      <link>https://undo.fm/gaslight/</link>
      <description>
        <![CDATA[<p>Modern work pressures call for some radical resistance, and we’re going to look for it where resistance is needed most: the frontline battle against oppression.</p><p>Check out our guest's podcast, <a href="https://episodes.fm/1472165023">You Are Not a Frog</a>.</p><p><a href="https://www.shapestoolkit.com/burnout-toolkit">Am I Stressed, Overwhelmed... or Burning Out?</a><strong><br></strong>Get your free guide to help you tell the difference</p>
<br><p><strong>Support the show from $3 and get</strong></p><ul><li>Episodes early and ad-free</li><li>Join our listener community</li><li>Join Mark for monthly Q&amp;As</li></ul><p><a href="https://www.patreon.com/c/UndoPodcast"><strong>Support Undo via Patreon</strong></a></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p>Modern work pressures call for some radical resistance, and we’re going to look for it where resistance is needed most: the frontline battle against oppression.</p><p>Check out our guest's podcast, <a href="https://episodes.fm/1472165023">You Are Not a Frog</a>.</p><p><a href="https://www.shapestoolkit.com/burnout-toolkit">Am I Stressed, Overwhelmed... or Burning Out?</a><strong><br></strong>Get your free guide to help you tell the difference</p>
<br><p><strong>Support the show from $3 and get</strong></p><ul><li>Episodes early and ad-free</li><li>Join our listener community</li><li>Join Mark for monthly Q&amp;As</li></ul><p><a href="https://www.patreon.com/c/UndoPodcast"><strong>Support Undo via Patreon</strong></a></p>]]>
      </content:encoded>
      <pubDate>Mon, 09 Jun 2025 00:00:00 +0100</pubDate>
      <author>Dr Rachel Morris, Mark Steadman</author>
      <enclosure url="https://op3.dev/e/pdcn.co/e/media.transistor.fm/82a282c5/ae91a05d.mp3" length="23019567" type="audio/mpeg"/>
      <itunes:author>Dr Rachel Morris, Mark Steadman</itunes:author>
      <itunes:image href="https://img.transistor.fm/v3U4qqV2hPCUEEqtCYAZZiLBuq4ODQAQggLXQQUB1vg/rs:fill:3000:3000:1/q:60/aHR0cHM6Ly9pbWct/dXBsb2FkLXByb2R1/Y3Rpb24udHJhbnNp/c3Rvci5mbS8xMzI3/YjZlMTYzMTRhZWE1/MDUzMTA2ZWY3Mzhi/Y2E5Ni5qcGc.jpg"/>
      <itunes:duration>1436</itunes:duration>
      <itunes:summary>
        <![CDATA[<p>Modern work pressures call for some radical resistance, and we’re going to look for it where resistance is needed most: the frontline battle against oppression.</p><p>Check out our guest's podcast, <a href="https://episodes.fm/1472165023">You Are Not a Frog</a>.</p><p><a href="https://www.shapestoolkit.com/burnout-toolkit">Am I Stressed, Overwhelmed... or Burning Out?</a><strong><br></strong>Get your free guide to help you tell the difference</p>
<br><p><strong>Support the show from $3 and get</strong></p><ul><li>Episodes early and ad-free</li><li>Join our listener community</li><li>Join Mark for monthly Q&amp;As</li></ul><p><a href="https://www.patreon.com/c/UndoPodcast"><strong>Support Undo via Patreon</strong></a></p>]]>
      </itunes:summary>
      <itunes:keywords></itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
    </item>
    <item>
      <title>“Busy is the New Stupid” – What does Warren Buffett know about real work?</title>
      <itunes:episode>21</itunes:episode>
      <podcast:episode>21</podcast:episode>
      <itunes:title>“Busy is the New Stupid” – What does Warren Buffett know about real work?</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <guid isPermaLink="false">1907f11a-7ee3-4191-bcc8-51d9fe263e68</guid>
      <link>https://undo.fm/buffett/</link>
      <description>
        <![CDATA[<p>Is there anything this 94 year-old business mogul can teach us about our attitude towards work and busyness?</p><p>Check out our guest's podcast, <a href="https://episodes.fm/1472165023">You Are Not a Frog</a>.</p><p><a href="https://www.shapestoolkit.com/burnout-toolkit">Am I Stressed, Overwhelmed... or Burning Out?</a><strong><br></strong>Get your free guide to help you tell the difference</p>
<br><p><strong>Support the show from $3 and get</strong></p><ul><li>Episodes early and ad-free</li><li>Join our listener community</li><li>Join Mark for monthly Q&amp;As</li></ul><p><a href="https://www.patreon.com/c/UndoPodcast"><strong>Support Undo via Patreon</strong></a></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p>Is there anything this 94 year-old business mogul can teach us about our attitude towards work and busyness?</p><p>Check out our guest's podcast, <a href="https://episodes.fm/1472165023">You Are Not a Frog</a>.</p><p><a href="https://www.shapestoolkit.com/burnout-toolkit">Am I Stressed, Overwhelmed... or Burning Out?</a><strong><br></strong>Get your free guide to help you tell the difference</p>
<br><p><strong>Support the show from $3 and get</strong></p><ul><li>Episodes early and ad-free</li><li>Join our listener community</li><li>Join Mark for monthly Q&amp;As</li></ul><p><a href="https://www.patreon.com/c/UndoPodcast"><strong>Support Undo via Patreon</strong></a></p>]]>
      </content:encoded>
      <pubDate>Mon, 02 Jun 2025 00:00:00 +0100</pubDate>
      <author>Dr Rachel Morris, Mark Steadman</author>
      <enclosure url="https://op3.dev/e/pdcn.co/e/media.transistor.fm/bdc794a0/7e7ba3c5.mp3" length="21149254" type="audio/mpeg"/>
      <itunes:author>Dr Rachel Morris, Mark Steadman</itunes:author>
      <itunes:image href="https://img.transistor.fm/BnWQxDdD5TVYwQ5Vhg8sDREYE-3X7WS_MoEdgZ_GwHQ/rs:fill:3000:3000:1/q:60/aHR0cHM6Ly9pbWct/dXBsb2FkLXByb2R1/Y3Rpb24udHJhbnNp/c3Rvci5mbS9lNWRl/NjdkNTZiYTQxYTUw/M2VlZjg3NzdhYWQx/M2M2NS5qcGc.jpg"/>
      <itunes:duration>1317</itunes:duration>
      <itunes:summary>
        <![CDATA[<p>Is there anything this 94 year-old business mogul can teach us about our attitude towards work and busyness?</p><p>Check out our guest's podcast, <a href="https://episodes.fm/1472165023">You Are Not a Frog</a>.</p><p><a href="https://www.shapestoolkit.com/burnout-toolkit">Am I Stressed, Overwhelmed... or Burning Out?</a><strong><br></strong>Get your free guide to help you tell the difference</p>
<br><p><strong>Support the show from $3 and get</strong></p><ul><li>Episodes early and ad-free</li><li>Join our listener community</li><li>Join Mark for monthly Q&amp;As</li></ul><p><a href="https://www.patreon.com/c/UndoPodcast"><strong>Support Undo via Patreon</strong></a></p>]]>
      </itunes:summary>
      <itunes:keywords></itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
    </item>
    <item>
      <title>The Hitchhiker's Guide to Productivity</title>
      <itunes:title>The Hitchhiker's Guide to Productivity</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <guid isPermaLink="false">0e455903-e193-4e71-90da-c0353e1f83c9</guid>
      <link>https://btlpodcast.com/s2/8</link>
      <description>
        <![CDATA[<p>Highlights from Mark's podcast dedicated to <em>the Hitchhiker's Guide to the Galaxy</em>, which covers – if not skewers – the subject of productivity in the loving image of Douglas Adams.</p>
<br><p><strong>Support the show from $3 and get</strong></p><ul><li>Episodes early and ad-free</li><li>Join our listener community</li><li>Join Mark for monthly Q&amp;As</li></ul><p><a href="https://www.patreon.com/c/UndoPodcast"><strong>Support Undo via Patreon</strong></a></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p>Highlights from Mark's podcast dedicated to <em>the Hitchhiker's Guide to the Galaxy</em>, which covers – if not skewers – the subject of productivity in the loving image of Douglas Adams.</p>
<br><p><strong>Support the show from $3 and get</strong></p><ul><li>Episodes early and ad-free</li><li>Join our listener community</li><li>Join Mark for monthly Q&amp;As</li></ul><p><a href="https://www.patreon.com/c/UndoPodcast"><strong>Support Undo via Patreon</strong></a></p>]]>
      </content:encoded>
      <pubDate>Mon, 26 May 2025 00:00:00 +0100</pubDate>
      <author>Jon Bounds, Jon Hickman, Danny Smith, Mark Steadman</author>
      <enclosure url="https://op3.dev/e/pdcn.co/e/media.transistor.fm/b7252047/bcbd2719.mp3" length="30212780" type="audio/mpeg"/>
      <itunes:author>Jon Bounds, Jon Hickman, Danny Smith, Mark Steadman</itunes:author>
      <itunes:duration>1889</itunes:duration>
      <itunes:summary>
        <![CDATA[<p>Highlights from Mark's podcast dedicated to <em>the Hitchhiker's Guide to the Galaxy</em>, which covers – if not skewers – the subject of productivity in the loving image of Douglas Adams.</p>
<br><p><strong>Support the show from $3 and get</strong></p><ul><li>Episodes early and ad-free</li><li>Join our listener community</li><li>Join Mark for monthly Q&amp;As</li></ul><p><a href="https://www.patreon.com/c/UndoPodcast"><strong>Support Undo via Patreon</strong></a></p>]]>
      </itunes:summary>
      <itunes:keywords></itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
    </item>
    <item>
      <title>How to remember everything — Tiago Forte and his Second Brain</title>
      <itunes:episode>20</itunes:episode>
      <podcast:episode>20</podcast:episode>
      <itunes:title>How to remember everything — Tiago Forte and his Second Brain</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <guid isPermaLink="false">9c77afff-f5cc-4f5f-a8ac-e300e05eda57</guid>
      <link>https://undo.fm/secondbrain/</link>
      <description>
        <![CDATA[<p>We need a system to keep our brain clear of all those nagging little tasks and bits of info we arry with us, so it can focus on having better ideas.</p>
<br><p><strong>Support the show from $3 and get</strong></p><ul><li>Episodes early and ad-free</li><li>Join our listener community</li><li>Join Mark for monthly Q&amp;As</li></ul><p><a href="https://www.patreon.com/c/UndoPodcast"><strong>Support Undo via Patreon</strong></a></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p>We need a system to keep our brain clear of all those nagging little tasks and bits of info we arry with us, so it can focus on having better ideas.</p>
<br><p><strong>Support the show from $3 and get</strong></p><ul><li>Episodes early and ad-free</li><li>Join our listener community</li><li>Join Mark for monthly Q&amp;As</li></ul><p><a href="https://www.patreon.com/c/UndoPodcast"><strong>Support Undo via Patreon</strong></a></p>]]>
      </content:encoded>
      <pubDate>Mon, 19 May 2025 00:00:00 +0100</pubDate>
      <author>Mark Steadman</author>
      <enclosure url="https://op3.dev/e/pdcn.co/e/media.transistor.fm/67541518/06f6443b.mp3" length="26016829" type="audio/mpeg"/>
      <itunes:author>Mark Steadman</itunes:author>
      <itunes:image href="https://img.transistor.fm/NP2aWkrefdwvfuxRDIelzgvXphnZ3XgfyTogEDJbSJE/rs:fill:3000:3000:1/q:60/aHR0cHM6Ly9pbWct/dXBsb2FkLXByb2R1/Y3Rpb24udHJhbnNp/c3Rvci5mbS8zNTlj/YjM3MmM2ZDU3NmFm/YjA0ZTkzMjlmNDJj/M2NmNi5qcGc.jpg"/>
      <itunes:duration>1624</itunes:duration>
      <itunes:summary>
        <![CDATA[<p>We need a system to keep our brain clear of all those nagging little tasks and bits of info we arry with us, so it can focus on having better ideas.</p>
<br><p><strong>Support the show from $3 and get</strong></p><ul><li>Episodes early and ad-free</li><li>Join our listener community</li><li>Join Mark for monthly Q&amp;As</li></ul><p><a href="https://www.patreon.com/c/UndoPodcast"><strong>Support Undo via Patreon</strong></a></p>]]>
      </itunes:summary>
      <itunes:keywords></itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
    </item>
    <item>
      <title>How to build a car or plan a wedding using Kanban</title>
      <itunes:episode>19</itunes:episode>
      <podcast:episode>19</podcast:episode>
      <itunes:title>How to build a car or plan a wedding using Kanban</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <guid isPermaLink="false">43a22b5b-6260-4b6b-b9fa-6f5acbf3eb70</guid>
      <link>https://undo.fm/kanban/</link>
      <description>
        <![CDATA[<p>We can learn a lot from the world of manufacture and bring it into the work that we do.</p>
<br><p><strong>Support the show from $3 and get</strong></p><ul><li>Episodes early and ad-free</li><li>Join our listener community</li><li>Join Mark for monthly Q&amp;As</li></ul><p><a href="https://www.patreon.com/c/UndoPodcast"><strong>Support Undo via Patreon</strong></a></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p>We can learn a lot from the world of manufacture and bring it into the work that we do.</p>
<br><p><strong>Support the show from $3 and get</strong></p><ul><li>Episodes early and ad-free</li><li>Join our listener community</li><li>Join Mark for monthly Q&amp;As</li></ul><p><a href="https://www.patreon.com/c/UndoPodcast"><strong>Support Undo via Patreon</strong></a></p>]]>
      </content:encoded>
      <pubDate>Mon, 12 May 2025 00:00:00 +0100</pubDate>
      <author>Mark Steadman</author>
      <enclosure url="https://op3.dev/e/pdcn.co/e/media.transistor.fm/b775bd0b/080edd64.mp3" length="19096770" type="audio/mpeg"/>
      <itunes:author>Mark Steadman</itunes:author>
      <itunes:image href="https://img.transistor.fm/c4WI3VyUxnrRDfm5KTbDbS9z_-r2F3kNUcL6WsRK58U/rs:fill:3000:3000:1/q:60/aHR0cHM6Ly9pbWct/dXBsb2FkLXByb2R1/Y3Rpb24udHJhbnNp/c3Rvci5mbS9iMjU0/YWQyOGIyMjQ1OTAx/YjUwNTRkMjFmMWQ4/ZDczYy5qcGc.jpg"/>
      <itunes:duration>1191</itunes:duration>
      <itunes:summary>
        <![CDATA[<p>We can learn a lot from the world of manufacture and bring it into the work that we do.</p>
<br><p><strong>Support the show from $3 and get</strong></p><ul><li>Episodes early and ad-free</li><li>Join our listener community</li><li>Join Mark for monthly Q&amp;As</li></ul><p><a href="https://www.patreon.com/c/UndoPodcast"><strong>Support Undo via Patreon</strong></a></p>]]>
      </itunes:summary>
      <itunes:keywords></itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
    </item>
    <item>
      <title>Why giving less than 100% is better for your health</title>
      <itunes:episode>18</itunes:episode>
      <podcast:episode>18</podcast:episode>
      <itunes:title>Why giving less than 100% is better for your health</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <guid isPermaLink="false">72e7f5ff-174c-4ed4-970e-7eb6d3d208f6</guid>
      <link>https://undo.fm/carl/</link>
      <description>
        <![CDATA[<p>The whip-cracking "give it all you got" business bro bullshit isn’t just insensitive – it’s actually wrong.</p>
<br><p><strong>Support the show from $3 and get</strong></p><ul><li>Episodes early and ad-free</li><li>Join our listener community</li><li>Join Mark for monthly Q&amp;As</li></ul><p><a href="https://www.patreon.com/c/UndoPodcast"><strong>Support Undo via Patreon</strong></a></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p>The whip-cracking "give it all you got" business bro bullshit isn’t just insensitive – it’s actually wrong.</p>
<br><p><strong>Support the show from $3 and get</strong></p><ul><li>Episodes early and ad-free</li><li>Join our listener community</li><li>Join Mark for monthly Q&amp;As</li></ul><p><a href="https://www.patreon.com/c/UndoPodcast"><strong>Support Undo via Patreon</strong></a></p>]]>
      </content:encoded>
      <pubDate>Mon, 05 May 2025 00:00:00 +0100</pubDate>
      <author>Mark Steadman</author>
      <enclosure url="https://op3.dev/e/pdcn.co/e/media.transistor.fm/81c969c5/155df114.mp3" length="17069956" type="audio/mpeg"/>
      <itunes:author>Mark Steadman</itunes:author>
      <itunes:image href="https://img.transistor.fm/bVtcVb61Y8xJ9v_XcWyJNvZ8Eu5lOSwqaZ3kFAKP8HE/rs:fill:3000:3000:1/q:60/aHR0cHM6Ly9pbWct/dXBsb2FkLXByb2R1/Y3Rpb24udHJhbnNp/c3Rvci5mbS8zZjU4/ZWE5ODBhN2FlYjky/N2QwYjY3NGYxZjI5/YTgzOC5qcGc.jpg"/>
      <itunes:duration>1064</itunes:duration>
      <itunes:summary>
        <![CDATA[<p>The whip-cracking "give it all you got" business bro bullshit isn’t just insensitive – it’s actually wrong.</p>
<br><p><strong>Support the show from $3 and get</strong></p><ul><li>Episodes early and ad-free</li><li>Join our listener community</li><li>Join Mark for monthly Q&amp;As</li></ul><p><a href="https://www.patreon.com/c/UndoPodcast"><strong>Support Undo via Patreon</strong></a></p>]]>
      </itunes:summary>
      <itunes:keywords></itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
    </item>
    <item>
      <title>Buckminster Fuller and the system of You</title>
      <itunes:episode>17</itunes:episode>
      <podcast:episode>17</podcast:episode>
      <itunes:title>Buckminster Fuller and the system of You</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <guid isPermaLink="false">4156c239-97bb-4d9e-9515-7d68de75aabb</guid>
      <link>https://undo.fm/systems/</link>
      <description>
        <![CDATA[<p>Modern work needs a more modern approach than Taylorism's simple "one right way". Enter systems theory, and one of its greatest proponents.</p>
<br><p><strong>Support the show from $3 and get</strong></p><ul><li>Episodes early and ad-free</li><li>Join our listener community</li><li>Join Mark for monthly Q&amp;As</li></ul><p><a href="https://www.patreon.com/c/UndoPodcast"><strong>Support Undo via Patreon</strong></a></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p>Modern work needs a more modern approach than Taylorism's simple "one right way". Enter systems theory, and one of its greatest proponents.</p>
<br><p><strong>Support the show from $3 and get</strong></p><ul><li>Episodes early and ad-free</li><li>Join our listener community</li><li>Join Mark for monthly Q&amp;As</li></ul><p><a href="https://www.patreon.com/c/UndoPodcast"><strong>Support Undo via Patreon</strong></a></p>]]>
      </content:encoded>
      <pubDate>Mon, 28 Apr 2025 00:00:00 +0100</pubDate>
      <author>Mark Steadman</author>
      <enclosure url="https://op3.dev/e/pdcn.co/e/media.transistor.fm/f050cc99/e1ee7771.mp3" length="20363043" type="audio/mpeg"/>
      <itunes:author>Mark Steadman</itunes:author>
      <itunes:image href="https://img.transistor.fm/Yq-z8rQyhq7xa61QXWMFcPJQXoJbNF9il8Bq0d-atDM/rs:fill:3000:3000:1/q:60/aHR0cHM6Ly9pbWct/dXBsb2FkLXByb2R1/Y3Rpb24udHJhbnNp/c3Rvci5mbS84ZDhl/MTc2NzY2MGMzYjhh/ZTM0OTZjOWQxYmRl/MzQ5Mi5qcGc.jpg"/>
      <itunes:duration>1269</itunes:duration>
      <itunes:summary>
        <![CDATA[<p>Modern work needs a more modern approach than Taylorism's simple "one right way". Enter systems theory, and one of its greatest proponents.</p>
<br><p><strong>Support the show from $3 and get</strong></p><ul><li>Episodes early and ad-free</li><li>Join our listener community</li><li>Join Mark for monthly Q&amp;As</li></ul><p><a href="https://www.patreon.com/c/UndoPodcast"><strong>Support Undo via Patreon</strong></a></p>]]>
      </itunes:summary>
      <itunes:keywords></itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
    </item>
    <item>
      <title>What Sherlock Holmes can teach us about productivity and our brains</title>
      <itunes:episode>16</itunes:episode>
      <podcast:episode>16</podcast:episode>
      <itunes:title>What Sherlock Holmes can teach us about productivity and our brains</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <guid isPermaLink="false">e77ac7f6-41f8-4afc-b38a-e1984cd8cc8b</guid>
      <link>https://undo.fm/sherlock/</link>
      <description>
        <![CDATA[<p>He’s the world’s first and only consulting detective, and his mind has fascinated us for over a hundred and thirty years. His methods are mysterious and complex, but goddammit he gets results.</p><p><br></p><p>So what can Baker Street’s most famous resident teach us about how we do our most important work?</p><p><br></p><p>Special thanks to this week's guest, <a href="https://www.matthewbellringer.com/">Matthew Bellringer</a>.</p>
<br><p><strong>Support the show from $3 and get</strong></p><ul><li>Episodes early and ad-free</li><li>Join our listener community</li><li>Join Mark for monthly Q&amp;As</li></ul><p><a href="https://www.patreon.com/c/UndoPodcast"><strong>Support Undo via Patreon</strong></a></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p>He’s the world’s first and only consulting detective, and his mind has fascinated us for over a hundred and thirty years. His methods are mysterious and complex, but goddammit he gets results.</p><p><br></p><p>So what can Baker Street’s most famous resident teach us about how we do our most important work?</p><p><br></p><p>Special thanks to this week's guest, <a href="https://www.matthewbellringer.com/">Matthew Bellringer</a>.</p>
<br><p><strong>Support the show from $3 and get</strong></p><ul><li>Episodes early and ad-free</li><li>Join our listener community</li><li>Join Mark for monthly Q&amp;As</li></ul><p><a href="https://www.patreon.com/c/UndoPodcast"><strong>Support Undo via Patreon</strong></a></p>]]>
      </content:encoded>
      <pubDate>Mon, 21 Apr 2025 00:00:00 +0100</pubDate>
      <author>Matthew Bellringer, Mark Steadman</author>
      <enclosure url="https://op3.dev/e/pdcn.co/e/media.transistor.fm/9db4e956/8d255026.mp3" length="23730979" type="audio/mpeg"/>
      <itunes:author>Matthew Bellringer, Mark Steadman</itunes:author>
      <itunes:image href="https://img.transistor.fm/fUq8d2R2JRQ-HgMYdJJ3JtWe0-fM-MAY5DlsOWhx2Og/rs:fill:3000:3000:1/q:60/aHR0cHM6Ly9pbWct/dXBsb2FkLXByb2R1/Y3Rpb24udHJhbnNp/c3Rvci5mbS9iNGY2/MzgzNzY1YzQzYzZj/NWEyNGRkZmFjMTAy/ZjA3Ni5qcGc.jpg"/>
      <itunes:duration>1478</itunes:duration>
      <itunes:summary>
        <![CDATA[<p>He’s the world’s first and only consulting detective, and his mind has fascinated us for over a hundred and thirty years. His methods are mysterious and complex, but goddammit he gets results.</p><p><br></p><p>So what can Baker Street’s most famous resident teach us about how we do our most important work?</p><p><br></p><p>Special thanks to this week's guest, <a href="https://www.matthewbellringer.com/">Matthew Bellringer</a>.</p>
<br><p><strong>Support the show from $3 and get</strong></p><ul><li>Episodes early and ad-free</li><li>Join our listener community</li><li>Join Mark for monthly Q&amp;As</li></ul><p><a href="https://www.patreon.com/c/UndoPodcast"><strong>Support Undo via Patreon</strong></a></p>]]>
      </itunes:summary>
      <itunes:keywords></itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
    </item>
    <item>
      <title>How to stick to it when the novelty wears off – Atomic Habits</title>
      <itunes:episode>15</itunes:episode>
      <podcast:episode>15</podcast:episode>
      <itunes:title>How to stick to it when the novelty wears off – Atomic Habits</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <guid isPermaLink="false">1b357306-b2e0-4e22-8bf6-e472883da14b</guid>
      <link>https://undo.fm/habits/</link>
      <description>
        <![CDATA[<p>Could there be more to habit building than “just showing up”? On those days when you can’t find the inspiration, is there anything you can do to help keep you on track?</p>
<br><p><strong>Support the show from $3 and get</strong></p><ul><li>Episodes early and ad-free</li><li>Join our listener community</li><li>Join Mark for monthly Q&amp;As</li></ul><p><a href="https://www.patreon.com/c/UndoPodcast"><strong>Support Undo via Patreon</strong></a></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p>Could there be more to habit building than “just showing up”? On those days when you can’t find the inspiration, is there anything you can do to help keep you on track?</p>
<br><p><strong>Support the show from $3 and get</strong></p><ul><li>Episodes early and ad-free</li><li>Join our listener community</li><li>Join Mark for monthly Q&amp;As</li></ul><p><a href="https://www.patreon.com/c/UndoPodcast"><strong>Support Undo via Patreon</strong></a></p>]]>
      </content:encoded>
      <pubDate>Mon, 14 Apr 2025 00:00:00 +0100</pubDate>
      <author>Mark Steadman</author>
      <enclosure url="https://op3.dev/e/pdcn.co/e/media.transistor.fm/fade89f3/0a906bca.mp3" length="26169047" type="audio/mpeg"/>
      <itunes:author>Mark Steadman</itunes:author>
      <itunes:image href="https://img.transistor.fm/v5E34IUqOOC4hd4lLO9CHDvzz4dQFRa5UxC4M6Z0FC4/rs:fill:3000:3000:1/q:60/aHR0cHM6Ly9pbWct/dXBsb2FkLXByb2R1/Y3Rpb24udHJhbnNp/c3Rvci5mbS84YTZk/YWFkMWQ2MTk5NTI1/YjAyMTY4NGY3N2Vh/MmM2Zi5qcGc.jpg"/>
      <itunes:duration>1634</itunes:duration>
      <itunes:summary>
        <![CDATA[<p>Could there be more to habit building than “just showing up”? On those days when you can’t find the inspiration, is there anything you can do to help keep you on track?</p>
<br><p><strong>Support the show from $3 and get</strong></p><ul><li>Episodes early and ad-free</li><li>Join our listener community</li><li>Join Mark for monthly Q&amp;As</li></ul><p><a href="https://www.patreon.com/c/UndoPodcast"><strong>Support Undo via Patreon</strong></a></p>]]>
      </itunes:summary>
      <itunes:keywords></itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
    </item>
    <item>
      <title>How to turn your side hustle into your main gig – “The One Thing”</title>
      <itunes:episode>14</itunes:episode>
      <podcast:episode>14</podcast:episode>
      <itunes:title>How to turn your side hustle into your main gig – “The One Thing”</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <guid isPermaLink="false">3b02892e-4f31-48bc-b9cd-1f7f3d393917</guid>
      <link>https://undo.fm/thing/</link>
      <description>
        <![CDATA[<p>While we might not come up with a paradigm-shifting idea, we are capable of putting a dent in the universe, and putting something on the permanent record of the Internet.</p>
<br><p><strong>Support the show from $3 and get</strong></p><ul><li>Episodes early and ad-free</li><li>Join our listener community</li><li>Join Mark for monthly Q&amp;As</li></ul><p><a href="https://www.patreon.com/c/UndoPodcast"><strong>Support Undo via Patreon</strong></a></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p>While we might not come up with a paradigm-shifting idea, we are capable of putting a dent in the universe, and putting something on the permanent record of the Internet.</p>
<br><p><strong>Support the show from $3 and get</strong></p><ul><li>Episodes early and ad-free</li><li>Join our listener community</li><li>Join Mark for monthly Q&amp;As</li></ul><p><a href="https://www.patreon.com/c/UndoPodcast"><strong>Support Undo via Patreon</strong></a></p>]]>
      </content:encoded>
      <pubDate>Mon, 07 Apr 2025 00:00:00 +0100</pubDate>
      <author>Mark Steadman</author>
      <enclosure url="https://op3.dev/e/pdcn.co/e/media.transistor.fm/9c26f9d6/e867f0a3.mp3" length="27274738" type="audio/mpeg"/>
      <itunes:author>Mark Steadman</itunes:author>
      <itunes:image href="https://img.transistor.fm/mvtWGX872APSuCY33MwkHXYmwC8QGn3LpFKaRZGqUCM/rs:fill:3000:3000:1/q:60/aHR0cHM6Ly9pbWct/dXBsb2FkLXByb2R1/Y3Rpb24udHJhbnNp/c3Rvci5mbS80ZTJm/MzcyMzViZDM1ZjZk/ZDZhNTAwMTFhZDQ1/YjFmNi5qcGc.jpg"/>
      <itunes:duration>1700</itunes:duration>
      <itunes:summary>
        <![CDATA[<p>While we might not come up with a paradigm-shifting idea, we are capable of putting a dent in the universe, and putting something on the permanent record of the Internet.</p>
<br><p><strong>Support the show from $3 and get</strong></p><ul><li>Episodes early and ad-free</li><li>Join our listener community</li><li>Join Mark for monthly Q&amp;As</li></ul><p><a href="https://www.patreon.com/c/UndoPodcast"><strong>Support Undo via Patreon</strong></a></p>]]>
      </itunes:summary>
      <itunes:keywords></itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
    </item>
    <item>
      <title>20% of your effort makes up 80% of your success — The Pareto principle</title>
      <itunes:episode>13</itunes:episode>
      <podcast:episode>13</podcast:episode>
      <itunes:title>20% of your effort makes up 80% of your success — The Pareto principle</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <guid isPermaLink="false">f852d129-6600-4962-b806-6e2d0d5d3557</guid>
      <link>https://undo.fm/pareto/</link>
      <description>
        <![CDATA[<p>How you can use this law of nature, work, productivity and creativity to focus on the stuff that will have the biggest impact, and eventually ditch the rest.</p>
<br><p><strong>Support the show from $3 and get</strong></p><ul><li>Episodes early and ad-free</li><li>Join our listener community</li><li>Join Mark for monthly Q&amp;As</li></ul><p><a href="https://www.patreon.com/c/UndoPodcast"><strong>Support Undo via Patreon</strong></a></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p>How you can use this law of nature, work, productivity and creativity to focus on the stuff that will have the biggest impact, and eventually ditch the rest.</p>
<br><p><strong>Support the show from $3 and get</strong></p><ul><li>Episodes early and ad-free</li><li>Join our listener community</li><li>Join Mark for monthly Q&amp;As</li></ul><p><a href="https://www.patreon.com/c/UndoPodcast"><strong>Support Undo via Patreon</strong></a></p>]]>
      </content:encoded>
      <pubDate>Mon, 31 Mar 2025 00:00:00 +0100</pubDate>
      <author>Mark Steadman</author>
      <enclosure url="https://op3.dev/e/pdcn.co/e/media.transistor.fm/7292bf49/57c03cff.mp3" length="25118475" type="audio/mpeg"/>
      <itunes:author>Mark Steadman</itunes:author>
      <itunes:image href="https://img.transistor.fm/z6MMnkBoextVS5bbqNp94Lh5EFvbY0TsilM8erisAvA/rs:fill:3000:3000:1/q:60/aHR0cHM6Ly9pbWct/dXBsb2FkLXByb2R1/Y3Rpb24udHJhbnNp/c3Rvci5mbS83ZGFk/YjNjMTRmNjg2YTVh/YjZkMzExMDUyNWY4/ZTc1OC5qcGc.jpg"/>
      <itunes:duration>1568</itunes:duration>
      <itunes:summary>
        <![CDATA[<p>How you can use this law of nature, work, productivity and creativity to focus on the stuff that will have the biggest impact, and eventually ditch the rest.</p>
<br><p><strong>Support the show from $3 and get</strong></p><ul><li>Episodes early and ad-free</li><li>Join our listener community</li><li>Join Mark for monthly Q&amp;As</li></ul><p><a href="https://www.patreon.com/c/UndoPodcast"><strong>Support Undo via Patreon</strong></a></p>]]>
      </itunes:summary>
      <itunes:keywords></itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
    </item>
    <item>
      <title>How to be a polymath – Leonardo da Vinci</title>
      <itunes:episode>12</itunes:episode>
      <podcast:episode>12</podcast:episode>
      <itunes:title>How to be a polymath – Leonardo da Vinci</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <guid isPermaLink="false">69c9b077-514d-4288-b10e-6ab253d93da8</guid>
      <link>https://undo.fm/davinci/</link>
      <description>
        <![CDATA[<p>Being a creative person in this most digital of decades means needing to be good at more than one form of creative expression. That means thinking like a polymath, and luckily we have history’s greatest multi-hyphenate to learn from.</p>
<br><p><strong>Support the show from $3 and get</strong></p><ul><li>Episodes early and ad-free</li><li>Join our listener community</li><li>Join Mark for monthly Q&amp;As</li></ul><p><a href="https://www.patreon.com/c/UndoPodcast"><strong>Support Undo via Patreon</strong></a></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p>Being a creative person in this most digital of decades means needing to be good at more than one form of creative expression. That means thinking like a polymath, and luckily we have history’s greatest multi-hyphenate to learn from.</p>
<br><p><strong>Support the show from $3 and get</strong></p><ul><li>Episodes early and ad-free</li><li>Join our listener community</li><li>Join Mark for monthly Q&amp;As</li></ul><p><a href="https://www.patreon.com/c/UndoPodcast"><strong>Support Undo via Patreon</strong></a></p>]]>
      </content:encoded>
      <pubDate>Mon, 24 Mar 2025 00:00:00 +0000</pubDate>
      <author>Mark Steadman</author>
      <enclosure url="https://op3.dev/e/pdcn.co/e/media.transistor.fm/7f178950/c6993ee5.mp3" length="22699111" type="audio/mpeg"/>
      <itunes:author>Mark Steadman</itunes:author>
      <itunes:image href="https://img.transistor.fm/zmkPo0gemfntglI3aYKLPZ-hJFcEk7W7-DUidx3bh9k/rs:fill:3000:3000:1/q:60/aHR0cHM6Ly9pbWct/dXBsb2FkLXByb2R1/Y3Rpb24udHJhbnNp/c3Rvci5mbS8yN2E4/OTA5NDA3ZmFiMDI4/OWQ5Zjc2MzZlNzdi/NjA1Zi5qcGc.jpg"/>
      <itunes:duration>1413</itunes:duration>
      <itunes:summary>
        <![CDATA[<p>Being a creative person in this most digital of decades means needing to be good at more than one form of creative expression. That means thinking like a polymath, and luckily we have history’s greatest multi-hyphenate to learn from.</p>
<br><p><strong>Support the show from $3 and get</strong></p><ul><li>Episodes early and ad-free</li><li>Join our listener community</li><li>Join Mark for monthly Q&amp;As</li></ul><p><a href="https://www.patreon.com/c/UndoPodcast"><strong>Support Undo via Patreon</strong></a></p>]]>
      </itunes:summary>
      <itunes:keywords></itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
      <podcast:chapters url="https://share.transistor.fm/s/7f178950/chapters.json" type="application/json+chapters"/>
    </item>
    <item>
      <title>The super-productive women missing from time management history</title>
      <itunes:episode>11</itunes:episode>
      <podcast:episode>11</podcast:episode>
      <itunes:title>The super-productive women missing from time management history</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <guid isPermaLink="false">eb572075-d43a-427a-bd39-a0ae0071bccb</guid>
      <link>https://undo.fm/women/</link>
      <description>
        <![CDATA[<p>Let’s spend a bit of time today with some of the women of productivity history, some of whom you know, some we’ll meet for the first time.</p>
<br><p><strong>Support the show from $3 and get</strong></p><ul><li>Episodes early and ad-free</li><li>Join our listener community</li><li>Join Mark for monthly Q&amp;As</li></ul><p><a href="https://www.patreon.com/c/UndoPodcast"><strong>Support Undo via Patreon</strong></a></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p>Let’s spend a bit of time today with some of the women of productivity history, some of whom you know, some we’ll meet for the first time.</p>
<br><p><strong>Support the show from $3 and get</strong></p><ul><li>Episodes early and ad-free</li><li>Join our listener community</li><li>Join Mark for monthly Q&amp;As</li></ul><p><a href="https://www.patreon.com/c/UndoPodcast"><strong>Support Undo via Patreon</strong></a></p>]]>
      </content:encoded>
      <pubDate>Mon, 17 Mar 2025 00:00:00 +0000</pubDate>
      <author>Mark Steadman</author>
      <enclosure url="https://op3.dev/e/pdcn.co/e/media.transistor.fm/53dfd139/86ccd195.mp3" length="20199708" type="audio/mpeg"/>
      <itunes:author>Mark Steadman</itunes:author>
      <itunes:image href="https://img.transistor.fm/WJ6ft0fnc2cd2y8dSHhPO04gT_dk735YmFO29DMennw/rs:fill:3000:3000:1/q:60/aHR0cHM6Ly9pbWct/dXBsb2FkLXByb2R1/Y3Rpb24udHJhbnNp/c3Rvci5mbS80MTA5/ZWMyYTliYTZkZWVk/NzJiZjJhY2UzNTQ2/ZDA4Yy5qcGc.jpg"/>
      <itunes:duration>1260</itunes:duration>
      <itunes:summary>
        <![CDATA[<p>Let’s spend a bit of time today with some of the women of productivity history, some of whom you know, some we’ll meet for the first time.</p>
<br><p><strong>Support the show from $3 and get</strong></p><ul><li>Episodes early and ad-free</li><li>Join our listener community</li><li>Join Mark for monthly Q&amp;As</li></ul><p><a href="https://www.patreon.com/c/UndoPodcast"><strong>Support Undo via Patreon</strong></a></p>]]>
      </itunes:summary>
      <itunes:keywords></itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
    </item>
    <item>
      <title>How Ben Franklin used timeboxing to stop missing deadlines</title>
      <itunes:episode>10</itunes:episode>
      <podcast:episode>10</podcast:episode>
      <itunes:title>How Ben Franklin used timeboxing to stop missing deadlines</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <guid isPermaLink="false">fa5783cd-c343-4f9b-a410-4d42369288cc</guid>
      <link>https://undo.fm/timeboxing/</link>
      <description>
        <![CDATA[<p>If you have to meet any kind of regular publishing schedule, you’ll know how time can stretch out into infinity until the night before you have to hit Publish, when suddenly it feels like you have to cram 8 hours of work into 30 minutes.</p><p>But Benjamin Franklin had a neat little system that helped him keep on top of his commitments, and all it takes is a pen, some paper, and a watch.</p>
<br><p><strong>Support the show from $3 and get</strong></p><ul><li>Episodes early and ad-free</li><li>Join our listener community</li><li>Join Mark for monthly Q&amp;As</li></ul><p><a href="https://www.patreon.com/c/UndoPodcast"><strong>Support Undo via Patreon</strong></a></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p>If you have to meet any kind of regular publishing schedule, you’ll know how time can stretch out into infinity until the night before you have to hit Publish, when suddenly it feels like you have to cram 8 hours of work into 30 minutes.</p><p>But Benjamin Franklin had a neat little system that helped him keep on top of his commitments, and all it takes is a pen, some paper, and a watch.</p>
<br><p><strong>Support the show from $3 and get</strong></p><ul><li>Episodes early and ad-free</li><li>Join our listener community</li><li>Join Mark for monthly Q&amp;As</li></ul><p><a href="https://www.patreon.com/c/UndoPodcast"><strong>Support Undo via Patreon</strong></a></p>]]>
      </content:encoded>
      <pubDate>Mon, 10 Mar 2025 00:00:00 +0000</pubDate>
      <author>Mark Steadman</author>
      <enclosure url="https://op3.dev/e/pdcn.co/e/media.transistor.fm/012dd928/b7444431.mp3" length="21437612" type="audio/mpeg"/>
      <itunes:author>Mark Steadman</itunes:author>
      <itunes:image href="https://img.transistor.fm/nLaymgcuplSJU1ECOmyCGQRLLIlu_9bpFZk45L8uj1o/rs:fill:3000:3000:1/q:60/aHR0cHM6Ly9pbWct/dXBsb2FkLXByb2R1/Y3Rpb24udHJhbnNp/c3Rvci5mbS81ODgx/OTE1NzA1MWQzMWE0/YjE0YzBkNmNiZjQw/Mzk2Mi5qcGc.jpg"/>
      <itunes:duration>1337</itunes:duration>
      <itunes:summary>
        <![CDATA[<p>If you have to meet any kind of regular publishing schedule, you’ll know how time can stretch out into infinity until the night before you have to hit Publish, when suddenly it feels like you have to cram 8 hours of work into 30 minutes.</p><p>But Benjamin Franklin had a neat little system that helped him keep on top of his commitments, and all it takes is a pen, some paper, and a watch.</p>
<br><p><strong>Support the show from $3 and get</strong></p><ul><li>Episodes early and ad-free</li><li>Join our listener community</li><li>Join Mark for monthly Q&amp;As</li></ul><p><a href="https://www.patreon.com/c/UndoPodcast"><strong>Support Undo via Patreon</strong></a></p>]]>
      </itunes:summary>
      <itunes:keywords></itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
      <podcast:socialInteract protocol="atproto" uri="at://did:plc:swlolfcpagux2bvahaqcghx4/app.bsky.feed.post/3ljyaolifj52j"/>
    </item>
    <item>
      <title>What happened to the Inbox Zero guy?</title>
      <itunes:episode>9</itunes:episode>
      <podcast:episode>9</podcast:episode>
      <itunes:title>What happened to the Inbox Zero guy?</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <guid isPermaLink="false">58a03941-6327-4a28-9848-d81a0baccb73</guid>
      <link>https://undo.fm/inbox/</link>
      <description>
        <![CDATA[<p>Inbox Zero is a pretty good way of organising your email, but behind the system is a dude who stepped off the hamster wheel of productivity, got some perspective, and became one of the Internet’s true treasures.</p>
<br><p><strong>Support the show from $3 and get</strong></p><ul><li>Episodes early and ad-free</li><li>Join our listener community</li><li>Join Mark for monthly Q&amp;As</li></ul><p><a href="https://www.patreon.com/c/UndoPodcast"><strong>Support Undo via Patreon</strong></a></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p>Inbox Zero is a pretty good way of organising your email, but behind the system is a dude who stepped off the hamster wheel of productivity, got some perspective, and became one of the Internet’s true treasures.</p>
<br><p><strong>Support the show from $3 and get</strong></p><ul><li>Episodes early and ad-free</li><li>Join our listener community</li><li>Join Mark for monthly Q&amp;As</li></ul><p><a href="https://www.patreon.com/c/UndoPodcast"><strong>Support Undo via Patreon</strong></a></p>]]>
      </content:encoded>
      <pubDate>Mon, 03 Mar 2025 00:00:00 +0000</pubDate>
      <author>Mark Steadman</author>
      <enclosure url="https://op3.dev/e/pdcn.co/e/media.transistor.fm/d56c5f60/b13378b0.mp3" length="25501799" type="audio/mpeg"/>
      <itunes:author>Mark Steadman</itunes:author>
      <itunes:image href="https://img.transistor.fm/28Z8V_GdX3hv5bE_8xe4FftCf_GJOE37bEoEAn_4koo/rs:fill:3000:3000:1/q:60/aHR0cHM6Ly9pbWct/dXBsb2FkLXByb2R1/Y3Rpb24udHJhbnNp/c3Rvci5mbS81MDcy/Mjg2YzhiOWRlZTg2/MWFlZDhlZDdmMzdl/NmY2MC5qcGc.jpg"/>
      <itunes:duration>1591</itunes:duration>
      <itunes:summary>
        <![CDATA[<p>Inbox Zero is a pretty good way of organising your email, but behind the system is a dude who stepped off the hamster wheel of productivity, got some perspective, and became one of the Internet’s true treasures.</p>
<br><p><strong>Support the show from $3 and get</strong></p><ul><li>Episodes early and ad-free</li><li>Join our listener community</li><li>Join Mark for monthly Q&amp;As</li></ul><p><a href="https://www.patreon.com/c/UndoPodcast"><strong>Support Undo via Patreon</strong></a></p>]]>
      </itunes:summary>
      <itunes:keywords></itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
      <podcast:socialInteract protocol="atproto" uri="at://did:plc:swlolfcpagux2bvahaqcghx4/app.bsky.feed.post/3ljgnfsqtom2o"/>
    </item>
    <item>
      <title>How to make fewer mistakes – The Checklist Manifesto</title>
      <itunes:episode>8</itunes:episode>
      <podcast:episode>8</podcast:episode>
      <itunes:title>How to make fewer mistakes – The Checklist Manifesto</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <guid isPermaLink="false">f5ea61e9-c7f3-4d2c-9049-9360ec7e53e2</guid>
      <link>https://undo.fm/checklist/</link>
      <description>
        <![CDATA[<p>Simple mistakes are more common than it’s comfortable to admit. But there’s a dirt-simple technique that has dramatically reduced the number of preventable deaths, and it’s stuff we can use to make our own lives run more smoothly.</p><p>Thanks to Ayesha Khan of <a href="https://www.everyscififilm.com">Every Single Sci-Fi Film Ever*</a> for lending her voice to Mark's silly opening sketch.</p>
<br><p><strong>Support the show from $3 and get</strong></p><ul><li>Episodes early and ad-free</li><li>Join our listener community</li><li>Join Mark for monthly Q&amp;As</li></ul><p><a href="https://www.patreon.com/c/UndoPodcast"><strong>Support Undo via Patreon</strong></a></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p>Simple mistakes are more common than it’s comfortable to admit. But there’s a dirt-simple technique that has dramatically reduced the number of preventable deaths, and it’s stuff we can use to make our own lives run more smoothly.</p><p>Thanks to Ayesha Khan of <a href="https://www.everyscififilm.com">Every Single Sci-Fi Film Ever*</a> for lending her voice to Mark's silly opening sketch.</p>
<br><p><strong>Support the show from $3 and get</strong></p><ul><li>Episodes early and ad-free</li><li>Join our listener community</li><li>Join Mark for monthly Q&amp;As</li></ul><p><a href="https://www.patreon.com/c/UndoPodcast"><strong>Support Undo via Patreon</strong></a></p>]]>
      </content:encoded>
      <pubDate>Mon, 24 Feb 2025 00:00:00 +0000</pubDate>
      <author>Mark Steadman</author>
      <enclosure url="https://op3.dev/e/pdcn.co/e/media.transistor.fm/6557ef9f/0143a97f.mp3" length="22734636" type="audio/mpeg"/>
      <itunes:author>Mark Steadman</itunes:author>
      <itunes:image href="https://img.transistor.fm/lNPjiEJMwM7LmcL4dPCZrJRfIR-X3VUtQQ2EepDqhVE/rs:fill:3000:3000:1/q:60/aHR0cHM6Ly9pbWct/dXBsb2FkLXByb2R1/Y3Rpb24udHJhbnNp/c3Rvci5mbS9kODUw/OWY1ZDc0Y2VhZTcx/ODc4NDFiNThjNzcw/ODI2Zi5qcGc.jpg"/>
      <itunes:duration>1418</itunes:duration>
      <itunes:summary>
        <![CDATA[<p>Simple mistakes are more common than it’s comfortable to admit. But there’s a dirt-simple technique that has dramatically reduced the number of preventable deaths, and it’s stuff we can use to make our own lives run more smoothly.</p><p>Thanks to Ayesha Khan of <a href="https://www.everyscififilm.com">Every Single Sci-Fi Film Ever*</a> for lending her voice to Mark's silly opening sketch.</p>
<br><p><strong>Support the show from $3 and get</strong></p><ul><li>Episodes early and ad-free</li><li>Join our listener community</li><li>Join Mark for monthly Q&amp;As</li></ul><p><a href="https://www.patreon.com/c/UndoPodcast"><strong>Support Undo via Patreon</strong></a></p>]]>
      </itunes:summary>
      <itunes:keywords></itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
      <podcast:socialInteract protocol="atproto" uri="at://did:plc:swlolfcpagux2bvahaqcghx4/app.bsky.feed.post/3liv2544awt2d"/>
    </item>
    <item>
      <title>How to work when the sky’s caving in — Lincoln vs Churchill</title>
      <itunes:episode>7</itunes:episode>
      <podcast:episode>7</podcast:episode>
      <itunes:title>How to work when the sky’s caving in — Lincoln vs Churchill</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <guid isPermaLink="false">518985f4-76fa-460d-83ce-329a3aa04df7</guid>
      <link>https://undo.fm/mood/</link>
      <description>
        <![CDATA[<p>When things look bleak, either in your head or out in the world, being “productive” is probably the furthest thing from your mind. We live in difficult times, no doubt, but two outliers a hundred years apart, fought oppression, propaganda, and dehumanisation all while under their own personal dark clouds.</p>
<br><p><strong>Support the show from $3 and get</strong></p><ul><li>Episodes early and ad-free</li><li>Join our listener community</li><li>Join Mark for monthly Q&amp;As</li></ul><p><a href="https://www.patreon.com/c/UndoPodcast"><strong>Support Undo via Patreon</strong></a></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p>When things look bleak, either in your head or out in the world, being “productive” is probably the furthest thing from your mind. We live in difficult times, no doubt, but two outliers a hundred years apart, fought oppression, propaganda, and dehumanisation all while under their own personal dark clouds.</p>
<br><p><strong>Support the show from $3 and get</strong></p><ul><li>Episodes early and ad-free</li><li>Join our listener community</li><li>Join Mark for monthly Q&amp;As</li></ul><p><a href="https://www.patreon.com/c/UndoPodcast"><strong>Support Undo via Patreon</strong></a></p>]]>
      </content:encoded>
      <pubDate>Mon, 17 Feb 2025 00:00:00 +0000</pubDate>
      <author>Mark Steadman</author>
      <enclosure url="https://op3.dev/e/pdcn.co/e/media.transistor.fm/ce782b8b/49b797d2.mp3" length="25972755" type="audio/mpeg"/>
      <itunes:author>Mark Steadman</itunes:author>
      <itunes:image href="https://img.transistor.fm/eZEvQd3xKmouX69eHquGjkCa4Pt1j-zWRGMcKOQ7eJ0/rs:fill:3000:3000:1/q:60/aHR0cHM6Ly9pbWct/dXBsb2FkLXByb2R1/Y3Rpb24udHJhbnNp/c3Rvci5mbS8xNTdj/ODk3N2U5ZTk5MmEz/ZmZkYzg0ZGYwY2Uz/MWM2ZS5qcGc.jpg"/>
      <itunes:duration>1620</itunes:duration>
      <itunes:summary>
        <![CDATA[<p>When things look bleak, either in your head or out in the world, being “productive” is probably the furthest thing from your mind. We live in difficult times, no doubt, but two outliers a hundred years apart, fought oppression, propaganda, and dehumanisation all while under their own personal dark clouds.</p>
<br><p><strong>Support the show from $3 and get</strong></p><ul><li>Episodes early and ad-free</li><li>Join our listener community</li><li>Join Mark for monthly Q&amp;As</li></ul><p><a href="https://www.patreon.com/c/UndoPodcast"><strong>Support Undo via Patreon</strong></a></p>]]>
      </itunes:summary>
      <itunes:keywords></itunes:keywords>
      <itunes:explicit>Yes</itunes:explicit>
    </item>
    <item>
      <title>Bullet Journal – Productive or performative?</title>
      <itunes:episode>6</itunes:episode>
      <podcast:episode>6</podcast:episode>
      <itunes:title>Bullet Journal – Productive or performative?</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <guid isPermaLink="false">81216e06-3775-476e-ae3e-5b5ad32232cc</guid>
      <link>https://www.undo.fm/bulletjournal/</link>
      <description>
        <![CDATA[<p>Can this analogue system for a digital age really help us get more done? Has it strayed from its roots and become synonymous with people who call things “super aesthetic”? And, if we can learn what we need to about the system in 3 minutes, why does it cost three and a half grand to learn to teach it?</p>
<br><p><strong>Support the show from $3 and get</strong></p><ul><li>Episodes early and ad-free</li><li>Join our listener community</li><li>Join Mark for monthly Q&amp;As</li></ul><p><a href="https://www.patreon.com/c/UndoPodcast"><strong>Support Undo via Patreon</strong></a></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p>Can this analogue system for a digital age really help us get more done? Has it strayed from its roots and become synonymous with people who call things “super aesthetic”? And, if we can learn what we need to about the system in 3 minutes, why does it cost three and a half grand to learn to teach it?</p>
<br><p><strong>Support the show from $3 and get</strong></p><ul><li>Episodes early and ad-free</li><li>Join our listener community</li><li>Join Mark for monthly Q&amp;As</li></ul><p><a href="https://www.patreon.com/c/UndoPodcast"><strong>Support Undo via Patreon</strong></a></p>]]>
      </content:encoded>
      <pubDate>Mon, 10 Feb 2025 00:00:00 +0000</pubDate>
      <author>Mark Steadman</author>
      <enclosure url="https://op3.dev/e/pdcn.co/e/media.transistor.fm/9cd53d86/3b94fe67.mp3" length="19958306" type="audio/mpeg"/>
      <itunes:author>Mark Steadman</itunes:author>
      <itunes:image href="https://img.transistor.fm/rPQzpxvXsga1bkGfdmtGcHcyf0WgSMob7M1PFmM07zQ/rs:fill:3000:3000:1/q:60/aHR0cHM6Ly9pbWct/dXBsb2FkLXByb2R1/Y3Rpb24udHJhbnNp/c3Rvci5mbS83ODI1/MDJiODhhMjI0Nzlj/ZGRiMzM1ZmVjMDgz/OTQ1Yi5qcGc.jpg"/>
      <itunes:duration>1242</itunes:duration>
      <itunes:summary>
        <![CDATA[<p>Can this analogue system for a digital age really help us get more done? Has it strayed from its roots and become synonymous with people who call things “super aesthetic”? And, if we can learn what we need to about the system in 3 minutes, why does it cost three and a half grand to learn to teach it?</p>
<br><p><strong>Support the show from $3 and get</strong></p><ul><li>Episodes early and ad-free</li><li>Join our listener community</li><li>Join Mark for monthly Q&amp;As</li></ul><p><a href="https://www.patreon.com/c/UndoPodcast"><strong>Support Undo via Patreon</strong></a></p>]]>
      </itunes:summary>
      <itunes:keywords></itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
    </item>
    <item>
      <title>How to get into the zone — Flow</title>
      <itunes:episode>5</itunes:episode>
      <podcast:episode>5</podcast:episode>
      <itunes:title>How to get into the zone — Flow</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <guid isPermaLink="false">8b190cd9-0534-4d84-9acf-2767eb7fda6a</guid>
      <link>https://www.undo.fm/flow/</link>
      <description>
        <![CDATA[<p>Time stands still and you’re in that sweet-spot where the work you're doing is challenging enough to hold your attention, but not so difficult that it causes you stress.</p><p>This is flow, and it might just prove itself to be one of the keys that unlocks long-term happiness.</p>
<br><p><strong>Support the show from $3 and get</strong></p><ul><li>Episodes early and ad-free</li><li>Join our listener community</li><li>Join Mark for monthly Q&amp;As</li></ul><p><a href="https://www.patreon.com/c/UndoPodcast"><strong>Support Undo via Patreon</strong></a></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p>Time stands still and you’re in that sweet-spot where the work you're doing is challenging enough to hold your attention, but not so difficult that it causes you stress.</p><p>This is flow, and it might just prove itself to be one of the keys that unlocks long-term happiness.</p>
<br><p><strong>Support the show from $3 and get</strong></p><ul><li>Episodes early and ad-free</li><li>Join our listener community</li><li>Join Mark for monthly Q&amp;As</li></ul><p><a href="https://www.patreon.com/c/UndoPodcast"><strong>Support Undo via Patreon</strong></a></p>]]>
      </content:encoded>
      <pubDate>Mon, 03 Feb 2025 00:00:00 +0000</pubDate>
      <author>Mark Steadman</author>
      <enclosure url="https://op3.dev/e/pdcn.co/e/media.transistor.fm/6772b422/40c6176b.mp3" length="18904557" type="audio/mpeg"/>
      <itunes:author>Mark Steadman</itunes:author>
      <itunes:image href="https://img.transistor.fm/SHyLm6O8eqzn0lRrbaCpqbr9QzloPLfYqywwy2XH_14/rs:fill:3000:3000:1/q:60/aHR0cHM6Ly9pbWct/dXBsb2FkLXByb2R1/Y3Rpb24udHJhbnNp/c3Rvci5mbS85Njgz/N2Q0Y2IwMzE4Nzk0/YjJkNGUxNzY1NWM0/YTAxNC5qcGc.jpg"/>
      <itunes:duration>1176</itunes:duration>
      <itunes:summary>
        <![CDATA[<p>Time stands still and you’re in that sweet-spot where the work you're doing is challenging enough to hold your attention, but not so difficult that it causes you stress.</p><p>This is flow, and it might just prove itself to be one of the keys that unlocks long-term happiness.</p>
<br><p><strong>Support the show from $3 and get</strong></p><ul><li>Episodes early and ad-free</li><li>Join our listener community</li><li>Join Mark for monthly Q&amp;As</li></ul><p><a href="https://www.patreon.com/c/UndoPodcast"><strong>Support Undo via Patreon</strong></a></p>]]>
      </itunes:summary>
      <itunes:keywords></itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
    </item>
    <item>
      <title>The tomato of productivity – the Pomodoro Technique</title>
      <itunes:episode>4</itunes:episode>
      <podcast:episode>4</podcast:episode>
      <itunes:title>The tomato of productivity – the Pomodoro Technique</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <guid isPermaLink="false">542903ea-d148-46e0-b359-8c0bfdb66582</guid>
      <link>https://www.undo.fm/pomodoro/</link>
      <description>
        <![CDATA[<p>It’s four o’clock in the afternoon, and you’re thinking over your day. Did you actually get anything done, or were you just reacting to a bunch of distractions?</p>
<br><p><strong>Support the show from $3 and get</strong></p><ul><li>Episodes early and ad-free</li><li>Join our listener community</li><li>Join Mark for monthly Q&amp;As</li></ul><p><a href="https://www.patreon.com/c/UndoPodcast"><strong>Support Undo via Patreon</strong></a></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p>It’s four o’clock in the afternoon, and you’re thinking over your day. Did you actually get anything done, or were you just reacting to a bunch of distractions?</p>
<br><p><strong>Support the show from $3 and get</strong></p><ul><li>Episodes early and ad-free</li><li>Join our listener community</li><li>Join Mark for monthly Q&amp;As</li></ul><p><a href="https://www.patreon.com/c/UndoPodcast"><strong>Support Undo via Patreon</strong></a></p>]]>
      </content:encoded>
      <pubDate>Mon, 27 Jan 2025 00:00:00 +0000</pubDate>
      <author>Mark Steadman</author>
      <enclosure url="https://op3.dev/e/pdcn.co/e/media.transistor.fm/ff48d5fa/9e34e886.mp3" length="18457083" type="audio/mpeg"/>
      <itunes:author>Mark Steadman</itunes:author>
      <itunes:image href="https://img.transistor.fm/n5CSMEHYqyIUHZGCXlZQCzS4mhUTqb0HUzUI_4UbU5w/rs:fill:3000:3000:1/q:60/aHR0cHM6Ly9pbWct/dXBsb2FkLXByb2R1/Y3Rpb24udHJhbnNp/c3Rvci5mbS8wMjE5/ZDIwODM0ZDc1OWE3/YTY2NTYzYzlhNDlh/OGQ0My5qcGc.jpg"/>
      <itunes:duration>1152</itunes:duration>
      <itunes:summary>
        <![CDATA[<p>It’s four o’clock in the afternoon, and you’re thinking over your day. Did you actually get anything done, or were you just reacting to a bunch of distractions?</p>
<br><p><strong>Support the show from $3 and get</strong></p><ul><li>Episodes early and ad-free</li><li>Join our listener community</li><li>Join Mark for monthly Q&amp;As</li></ul><p><a href="https://www.patreon.com/c/UndoPodcast"><strong>Support Undo via Patreon</strong></a></p>]]>
      </itunes:summary>
      <itunes:keywords></itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
    </item>
    <item>
      <title>Do the worst thing first thing (”Eat the frog”)</title>
      <itunes:episode>3</itunes:episode>
      <podcast:episode>3</podcast:episode>
      <itunes:title>Do the worst thing first thing (”Eat the frog”)</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <guid isPermaLink="false">b2fc44ed-e686-4c50-bfdd-56392fa6d142</guid>
      <link>https://www.undo.fm/frog/</link>
      <description>
        <![CDATA[<p>“Eat a live frog every morning, and nothing worse will happen to you for the rest of the day.” So says Mark Twain. Or so says a productivity guru says Mark Twain. But as far as we can tell, Mark Twain never said that. So what’s with all the frogs, and how can they help us do more of the right stuff, and less of the wrong?</p>
<br><p><strong>Support the show from $3 and get</strong></p><ul><li>Episodes early and ad-free</li><li>Join our listener community</li><li>Join Mark for monthly Q&amp;As</li></ul><p><a href="https://www.patreon.com/c/UndoPodcast"><strong>Support Undo via Patreon</strong></a></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p>“Eat a live frog every morning, and nothing worse will happen to you for the rest of the day.” So says Mark Twain. Or so says a productivity guru says Mark Twain. But as far as we can tell, Mark Twain never said that. So what’s with all the frogs, and how can they help us do more of the right stuff, and less of the wrong?</p>
<br><p><strong>Support the show from $3 and get</strong></p><ul><li>Episodes early and ad-free</li><li>Join our listener community</li><li>Join Mark for monthly Q&amp;As</li></ul><p><a href="https://www.patreon.com/c/UndoPodcast"><strong>Support Undo via Patreon</strong></a></p>]]>
      </content:encoded>
      <pubDate>Mon, 20 Jan 2025 00:00:00 +0000</pubDate>
      <author>Mark Steadman</author>
      <enclosure url="https://op3.dev/e/pdcn.co/e/media.transistor.fm/07f74012/725d5fed.mp3" length="15001322" type="audio/mpeg"/>
      <itunes:author>Mark Steadman</itunes:author>
      <itunes:image href="https://img.transistor.fm/OaZBJKh5qfN3OG9Z9dkIknHdXB9J8vNIlsmDnPPSE9E/rs:fill:3000:3000:1/q:60/aHR0cHM6Ly9pbWct/dXBsb2FkLXByb2R1/Y3Rpb24udHJhbnNp/c3Rvci5mbS9lMTRm/NjhhMzUyZjk1M2Rh/MzdiMWUxODIzMjg5/MGYxNC5qcGc.jpg"/>
      <itunes:duration>935</itunes:duration>
      <itunes:summary>
        <![CDATA[<p>“Eat a live frog every morning, and nothing worse will happen to you for the rest of the day.” So says Mark Twain. Or so says a productivity guru says Mark Twain. But as far as we can tell, Mark Twain never said that. So what’s with all the frogs, and how can they help us do more of the right stuff, and less of the wrong?</p>
<br><p><strong>Support the show from $3 and get</strong></p><ul><li>Episodes early and ad-free</li><li>Join our listener community</li><li>Join Mark for monthly Q&amp;As</li></ul><p><a href="https://www.patreon.com/c/UndoPodcast"><strong>Support Undo via Patreon</strong></a></p>]]>
      </itunes:summary>
      <itunes:keywords></itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
    </item>
    <item>
      <title>Work expands to fill the time available – Parkinson’s Law</title>
      <itunes:episode>2</itunes:episode>
      <podcast:episode>2</podcast:episode>
      <itunes:title>Work expands to fill the time available – Parkinson’s Law</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <guid isPermaLink="false">19be22d4-ee8d-40b9-be3b-326ebb6c6fd7</guid>
      <link>https://www.undo.fm/parkinson/</link>
      <description>
        <![CDATA[<p>Studies show if you give people 60 minutes to complete a task that only takes 30, they’ll work the full hour instead of taking the rest off.</p><p>That’s Parkinson’s Law in action, and by recognising it, we can buy back some time to ourselves. Just don’t tell the boss, or they’ll give you more busy work.</p>
<br><p><strong>Support the show from $3 and get</strong></p><ul><li>Episodes early and ad-free</li><li>Join our listener community</li><li>Join Mark for monthly Q&amp;As</li></ul><p><a href="https://www.patreon.com/c/UndoPodcast"><strong>Support Undo via Patreon</strong></a></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p>Studies show if you give people 60 minutes to complete a task that only takes 30, they’ll work the full hour instead of taking the rest off.</p><p>That’s Parkinson’s Law in action, and by recognising it, we can buy back some time to ourselves. Just don’t tell the boss, or they’ll give you more busy work.</p>
<br><p><strong>Support the show from $3 and get</strong></p><ul><li>Episodes early and ad-free</li><li>Join our listener community</li><li>Join Mark for monthly Q&amp;As</li></ul><p><a href="https://www.patreon.com/c/UndoPodcast"><strong>Support Undo via Patreon</strong></a></p>]]>
      </content:encoded>
      <pubDate>Mon, 13 Jan 2025 00:00:00 +0000</pubDate>
      <author>Mark Steadman</author>
      <enclosure url="https://op3.dev/e/pdcn.co/e/media.transistor.fm/6e5b53bb/3b70bd7a.mp3" length="13589547" type="audio/mpeg"/>
      <itunes:author>Mark Steadman</itunes:author>
      <itunes:image href="https://img.transistor.fm/PB66BZ-1-5AUzRpeZLrGWI_mJ7dvO7EMTRIMwuiu3Og/rs:fill:3000:3000:1/q:60/aHR0cHM6Ly9pbWct/dXBsb2FkLXByb2R1/Y3Rpb24udHJhbnNp/c3Rvci5mbS83M2Q3/ZTRjMjVhMjBlNWI0/M2JhYTg3MmIwMGIx/YWJjOC5qcGc.jpg"/>
      <itunes:duration>846</itunes:duration>
      <itunes:summary>
        <![CDATA[<p>Studies show if you give people 60 minutes to complete a task that only takes 30, they’ll work the full hour instead of taking the rest off.</p><p>That’s Parkinson’s Law in action, and by recognising it, we can buy back some time to ourselves. Just don’t tell the boss, or they’ll give you more busy work.</p>
<br><p><strong>Support the show from $3 and get</strong></p><ul><li>Episodes early and ad-free</li><li>Join our listener community</li><li>Join Mark for monthly Q&amp;As</li></ul><p><a href="https://www.patreon.com/c/UndoPodcast"><strong>Support Undo via Patreon</strong></a></p>]]>
      </itunes:summary>
      <itunes:keywords></itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
    </item>
    <item>
      <title>The Eisenhower Matrix – Decision-making in the White House</title>
      <itunes:episode>1</itunes:episode>
      <podcast:episode>1</podcast:episode>
      <itunes:title>The Eisenhower Matrix – Decision-making in the White House</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <guid isPermaLink="false">4fb0e6fc-c55f-4e43-8c00-da4889b2a27c</guid>
      <link>https://www.undo.fm/eisenhower/</link>
      <description>
        <![CDATA[<p>How do you decide what needs to be done now, and what can wait? And how do you take care of the stuff that needs doing now, while not neglecting the things that make it worth getting out of bed in the morning?</p>
<br><p><strong>Support the show from $3 and get</strong></p><ul><li>Episodes early and ad-free</li><li>Join our listener community</li><li>Join Mark for monthly Q&amp;As</li></ul><p><a href="https://www.patreon.com/c/UndoPodcast"><strong>Support Undo via Patreon</strong></a></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p>How do you decide what needs to be done now, and what can wait? And how do you take care of the stuff that needs doing now, while not neglecting the things that make it worth getting out of bed in the morning?</p>
<br><p><strong>Support the show from $3 and get</strong></p><ul><li>Episodes early and ad-free</li><li>Join our listener community</li><li>Join Mark for monthly Q&amp;As</li></ul><p><a href="https://www.patreon.com/c/UndoPodcast"><strong>Support Undo via Patreon</strong></a></p>]]>
      </content:encoded>
      <pubDate>Mon, 06 Jan 2025 00:00:00 +0000</pubDate>
      <author>Mark Steadman</author>
      <enclosure url="https://op3.dev/e/pdcn.co/e/media.transistor.fm/c8e44781/759cc575.mp3" length="13355625" type="audio/mpeg"/>
      <itunes:author>Mark Steadman</itunes:author>
      <itunes:image href="https://img.transistor.fm/D6Z4dhSNE4EMmMXxJ5LcKGeGPL1GtVZK6AZp3crrGi8/rs:fill:3000:3000:1/q:60/aHR0cHM6Ly9pbWct/dXBsb2FkLXByb2R1/Y3Rpb24udHJhbnNp/c3Rvci5mbS82ZTFm/ZmVmYTI0ZTE4ODRh/MDBjYmMyODU2OTc0/ZjhmYi5qcGc.jpg"/>
      <itunes:duration>830</itunes:duration>
      <itunes:summary>
        <![CDATA[<p>How do you decide what needs to be done now, and what can wait? And how do you take care of the stuff that needs doing now, while not neglecting the things that make it worth getting out of bed in the morning?</p>
<br><p><strong>Support the show from $3 and get</strong></p><ul><li>Episodes early and ad-free</li><li>Join our listener community</li><li>Join Mark for monthly Q&amp;As</li></ul><p><a href="https://www.patreon.com/c/UndoPodcast"><strong>Support Undo via Patreon</strong></a></p>]]>
      </itunes:summary>
      <itunes:keywords></itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
    </item>
    <item>
      <title>Introducing Undo</title>
      <itunes:title>Introducing Undo</itunes:title>
      <itunes:episodeType>trailer</itunes:episodeType>
      <guid isPermaLink="false">ceacf949-5a4b-45d7-8183-aed463d135de</guid>
      <link>https://undo.fm/trailer/</link>
      <description>
        <![CDATA[<p><strong>Coming January 2025.</strong></p><p>Humans will do anything to avoid the actual work they said they’d do. While supposedly writing this trailer I checked my slow cooker, restocked the fridge, took my blood pressure (it’s dangerously high, btw), followed up on a WhatsApp conversation, picked up the post, checked in on the cats, tidied my desk and made another coffee.</p><p>That’s genuinely true – these are all things I did while I should’ve been writing this script.</p><p>And all I really need to tell you is that Undo is a podcast that examines productivity methods through the ages and tries to separate the brilliant from the bullshit, so you can figure out how to design your own system that matches your brain chemistry.</p><p>I mean really, it’s just a fun show you can listen and tell yourself you’re working. Finally, procrastination in podcast form!</p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p><strong>Coming January 2025.</strong></p><p>Humans will do anything to avoid the actual work they said they’d do. While supposedly writing this trailer I checked my slow cooker, restocked the fridge, took my blood pressure (it’s dangerously high, btw), followed up on a WhatsApp conversation, picked up the post, checked in on the cats, tidied my desk and made another coffee.</p><p>That’s genuinely true – these are all things I did while I should’ve been writing this script.</p><p>And all I really need to tell you is that Undo is a podcast that examines productivity methods through the ages and tries to separate the brilliant from the bullshit, so you can figure out how to design your own system that matches your brain chemistry.</p><p>I mean really, it’s just a fun show you can listen and tell yourself you’re working. Finally, procrastination in podcast form!</p>]]>
      </content:encoded>
      <pubDate>Fri, 08 Nov 2024 00:00:00 +0000</pubDate>
      <author>Mark Steadman</author>
      <enclosure url="https://op3.dev/e/pdcn.co/e/media.transistor.fm/31a472ee/6869d13f.mp3" length="1440963" type="audio/mpeg"/>
      <itunes:author>Mark Steadman</itunes:author>
      <itunes:image href="https://img.transistor.fm/Tm4-GOpN9MPA1qNTXV4-i3jopqG7dN23RrImbqWqzkY/rs:fill:3000:3000:1/q:60/aHR0cHM6Ly9pbWct/dXBsb2FkLXByb2R1/Y3Rpb24udHJhbnNp/c3Rvci5mbS83MDgz/N2JiNWNjMTg4ZDY1/YjY1NmIyNzJmOTEz/YTA0MC5qcGc.jpg"/>
      <itunes:duration>71</itunes:duration>
      <itunes:summary>
        <![CDATA[<p><strong>Coming January 2025.</strong></p><p>Humans will do anything to avoid the actual work they said they’d do. While supposedly writing this trailer I checked my slow cooker, restocked the fridge, took my blood pressure (it’s dangerously high, btw), followed up on a WhatsApp conversation, picked up the post, checked in on the cats, tidied my desk and made another coffee.</p><p>That’s genuinely true – these are all things I did while I should’ve been writing this script.</p><p>And all I really need to tell you is that Undo is a podcast that examines productivity methods through the ages and tries to separate the brilliant from the bullshit, so you can figure out how to design your own system that matches your brain chemistry.</p><p>I mean really, it’s just a fun show you can listen and tell yourself you’re working. Finally, procrastination in podcast form!</p>]]>
      </itunes:summary>
      <itunes:keywords></itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
    </item>
  </channel>
</rss>
",
    "url": "https://feeds.transistor.fm/undo",
    "method": "GET"
}